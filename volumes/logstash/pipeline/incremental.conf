# https://www.elastic.co/blog/how-to-keep-elasticsearch-synchronized-with-a-relational-database-using-logstash
# https://towardsdatascience.com/how-to-synchronize-elasticsearch-with-mysql-ed32fc57b339

input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/mysql-connector-java-8.0.22.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://loc.publay.com:3306"
    jdbc_user => "root"
    jdbc_password => "dbpassword"
    clean_run => true
    schedule => "*/5 * * * * *" # every 5 seconds
    use_column_value => true
    tracking_column => "index_action_id"
    tracking_column_type => "numeric"
    # select from index table, then join users. Otherwise, if a user was deleted, the join will fail and the row will be ignored
    statement => "SELECT * FROM strapi.up_users_index_action a LEFT JOIN strapi.up_users u ON u.id = a.user_id WHERE (a.index_action_id > :sql_last_value AND a.action_time < NOW()) ORDER BY a.index_action_id"
  }
}
filter {
  if [action_type] == "create" or [action_type] == "update" {
    mutate { add_field => { "[@metadata][action]" => "index" } }
  } else if [action_type] == "delete" {
    mutate { add_field => { "[@metadata][action]" => "delete" } }
  }

  mutate {
    remove_field => ["action_type", "@version", "@timestamp", "password", "*_token"]
  }
}
output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "up_users"
    action => "%{[@metadata][action]}"
    # map to index table user id, otherwise if a user was deleted, this would be empty
    document_id => "%{user_id}"
  }
}